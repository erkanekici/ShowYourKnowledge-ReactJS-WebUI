{"version":3,"sources":["../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/icons/Info.js","../node_modules/@material-ui/core/esm/Tab/Tab.js","../node_modules/normalize-scroll-left/esm/main.js","../node_modules/@material-ui/core/esm/internal/animate.js","../node_modules/@material-ui/core/esm/Tabs/ScrollbarSize.js","../node_modules/@material-ui/core/esm/Tabs/TabIndicator.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@material-ui/core/esm/Tabs/TabScrollButton.js","../node_modules/@material-ui/core/esm/Tabs/Tabs.js"],"names":["_interopRequireDefault","__webpack_require__","Object","defineProperty","exports","value","default","_react","_default","createElement","d","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","n","clsx__WEBPACK_IMPORTED_MODULE_5__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__","_ButtonBase__WEBPACK_IMPORTED_MODULE_7__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__","Tab","a","forwardRef","props","ref","classes","className","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","fullWidth","icon","indicator","label","onChange","onClick","selected","_props$textColor","textColor","_props$wrapped","wrapped","other","focusRipple","root","concat","labelIcon","role","aria-selected","event","wrapper","__webpack_exports__","theme","_extends2","typography","button","maxWidth","minWidth","position","boxSizing","minHeight","flexShrink","padding","breakpoints","up","fontSize","pxToRem","paddingTop","& $wrapper > *:first-child","marginBottom","textColorInherit","color","opacity","&$selected","&$disabled","textColorPrimary","palette","text","secondary","primary","main","textColorSecondary","flexGrow","flexBasis","lineHeight","display","alignItems","justifyContent","width","flexDirection","name","cachedType","inDOM","window","document","detectScrollType","body","dummy","appendChild","createTextNode","dir","style","height","top","overflow","scrollLeft","removeChild","getNormalizedScrollLeft","element","direction","type","Number","NaN","scrollWidth","clientWidth","easeInOutSin","time","Math","sin","PI","ScrollbarSize_styles","ScrollbarSize","objectWithoutProperties","scrollbarHeight","react_default","useRef","nodeRef","setMeasurements","current","offsetHeight","clientHeight","useEffect","handleResize","debounce","prevHeight","addEventListener","clear","removeEventListener","esm_extends","TabIndicator_TabIndicator","orientation","clsx_m","capitalize","vertical","Tabs_TabIndicator","withStyles","bottom","transition","transitions","create","colorPrimary","backgroundColor","colorSecondary","right","KeyboardArrowLeft","createSvgIcon","KeyboardArrowRight","_ref","_ref2","TabScrollButton_TabScrollButton","classNameProp","visible","ButtonBase","component","tabIndex","Tabs_TabScrollButton","& svg","transform","Tabs_Tabs","action","_props$centered","centered","childrenProp","children","_props$component","Component","_props$indicatorColor","indicatorColor","_props$orientation","_props$ScrollButtonCo","ScrollButtonComponent","_props$scrollButtons","scrollButtons","_props$TabIndicatorPr","TabIndicatorProps","_props$variant","variant","useTheme","scrollable","isRtl","scrollStart","start","end","clientSize","size","_React$useState","useState","mounted","setMounted","_React$useState2","indicatorStyle","setIndicatorStyle","_React$useState3","displayScroll","setDisplayScroll","_React$useState4","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","childrenWrapperRef","getTabsMeta","tabsMeta","tabMeta","tabsNode","rect","getBoundingClientRect","scrollTop","scrollLeftNormalized","left","_children","length","tab","get","updateIndicatorState","useEventCallback","_newIndicatorStyle","_getTabsMeta","startValue","correction","newIndicatorStyle","isNaN","dStart","abs","dSize","scroll","scrollValue","property","to","options","arguments","undefined","cb","_options$ease","ease","_options$duration","duration","from","cancelled","cancel","Error","requestAnimationFrame","step","timestamp","min","animate","moveTabsScroll","delta","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","useCallback","scrollSelectedIntoView","_getTabsMeta2","nextScrollStart","_nextScrollStart","updateScrollButtonState","showStartScroll","showEndScroll","_tabsRef$current","scrollHeight","win","ownerWindow","handleTabsScroll","useImperativeHandle","updateIndicator","updateScrollButtons","childIndex","Children","map","child","isValidElement","childValue","set","cloneElement","conditionalElements","scrollbarSizeListener","scrollButtonsActive","showScrollButtons","scrollButtonStart","scrollButtonsDesktop","scrollButtonEnd","getConditionalElements","scroller","fixed","onScroll","flexContainer","flexContainerVertical","WebkitOverflowScrolling","flex","whiteSpace","overflowX","scrollbarWidth","&::-webkit-scrollbar","down"],"mappings":"2FAEA,IAAAA,EAA6BC,EAAQ,IAErCC,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAE,aAAA,EAEA,IAAAC,EAAAP,EAAoCC,EAAQ,IAI5CO,GAAA,EAFAR,EAA4CC,EAAQ,MAEpDK,SAAAC,EAAAD,QAAAG,cAAA,QACAC,EAAA,0GACC,SAEDN,EAAAE,QAAAE,oCCfA,IAAAR,EAA6BC,EAAQ,IAErCC,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAE,aAAA,EAEA,IAAAC,EAAAP,EAAoCC,EAAQ,IAI5CO,GAAA,EAFAR,EAA4CC,EAAQ,MAEpDK,SAAAC,EAAAD,QAAAG,cAAA,QACAC,EAAA,qGACC,QAEDN,EAAAE,QAAAE,oCCjBA,IAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,GAAAa,EAAAb,EAAA,GAAAc,EAAAd,EAAAe,EAAAF,GAAAG,GAAAhB,EAAA,GAAAA,EAAA,IAAAiB,EAAAjB,EAAA,GAAAkB,EAAAlB,EAAA,KAAAmB,EAAAnB,EAAA,IAuGAoB,EAAUN,EAAAO,EAAKC,WAAA,SAAAC,EAAAC,GACf,IAAAC,EAAAF,EAAAE,QACAC,EAAAH,EAAAG,UACAC,EAAAJ,EAAAK,SACAA,OAAA,IAAAD,KACAE,EAAAN,EAAAO,mBACAA,OAAA,IAAAD,KACAE,EAAAR,EAAAQ,UACAC,EAAAT,EAAAS,KACAC,EAAAV,EAAAU,UACAC,EAAAX,EAAAW,MACAC,EAAAZ,EAAAY,SACAC,EAAAb,EAAAa,QACAC,EAAAd,EAAAc,SACAC,EAAAf,EAAAgB,UACAA,OAAA,IAAAD,EAAA,UAAAA,EACAlC,EAAAmB,EAAAnB,MACAoC,EAAAjB,EAAAkB,QACAA,OAAA,IAAAD,KACAE,EAAczC,OAAAS,EAAA,EAAAT,CAAwBsB,EAAA,8JAYtC,OAAST,EAAAO,EAAKb,cAAeU,EAAA,EAAYjB,OAAAW,EAAA,EAAAX,CAAQ,CACjD0C,aAAAb,EACAJ,UAAezB,OAAAe,EAAA,EAAAf,CAAIwB,EAAAmB,KAAAnB,EAAA,YAAAoB,OAA0C5C,OAAAkB,EAAA,EAAAlB,CAAUsC,KAAAb,EAAAE,GAAAH,EAAAG,SAAAS,GAAAZ,EAAAY,SAAAH,GAAAF,GAAAP,EAAAqB,UAAAf,GAAAN,EAAAM,UAAAU,GAAAhB,EAAAgB,SACvEjB,MACAuB,KAAA,MACAC,gBAAAX,EACAT,WACAQ,QAjBA,SAAAa,GACAd,GACAA,EAAAc,EAAA7C,GAGAgC,GACAA,EAAAa,KAYGP,GAAU5B,EAAAO,EAAKb,cAAA,QAClBkB,UAAAD,EAAAyB,SACGlB,EAAAE,GAAAD,KAyFYkB,EAAA,EAAAlD,OAAAgB,EAAA,EAAAhB,CA/NR,SAAAmD,GACP,IAAAC,EAEA,OAEAT,KAAU3C,OAAAW,EAAA,EAAAX,CAAQ,GAAGmD,EAAAE,WAAAC,QAAAF,EAAA,CACrBG,SAAA,IACAC,SAAA,GACAC,SAAA,WACAC,UAAA,aACAC,UAAA,GACAC,WAAA,EACAC,QAAA,YACO7D,OAAAU,EAAA,EAAAV,CAAeoD,EAAAD,EAAAW,YAAAC,GAAA,OACtBF,QAAA,aACQ7D,OAAAU,EAAA,EAAAV,CAAeoD,EAAA,qBAAmCpD,OAAAU,EAAA,EAAAV,CAAeoD,EAAA,uBAAqCpD,OAAAU,EAAA,EAAAV,CAAeoD,EAAA,sBAAoCpD,OAAAU,EAAA,EAAAV,CAAeoD,EAAAD,EAAAW,YAAAC,GAAA,OAChLC,SAAAb,EAAAE,WAAAY,QAAA,IACAT,SAAA,MACKJ,IAGLP,UAAA,CACAc,UAAA,GACAO,WAAA,EACAC,6BAAA,CACAC,aAAA,IAKAC,iBAAA,CACAC,MAAA,UACAC,QAAA,GACAC,aAAA,CACAD,QAAA,GAEAE,aAAA,CACAF,QAAA,KAKAG,iBAAA,CACAJ,MAAAnB,EAAAwB,QAAAC,KAAAC,UACAL,aAAA,CACAF,MAAAnB,EAAAwB,QAAAG,QAAAC,MAEAN,aAAA,CACAH,MAAAnB,EAAAwB,QAAAC,KAAAjD,WAKAqD,mBAAA,CACAV,MAAAnB,EAAAwB,QAAAC,KAAAC,UACAL,aAAA,CACAF,MAAAnB,EAAAwB,QAAAE,UAAAE,MAEAN,aAAA,CACAH,MAAAnB,EAAAwB,QAAAC,KAAAjD,WAKAS,SAAA,GAGAT,SAAA,GAGAG,UAAA,CACA8B,WAAA,EACAqB,SAAA,EACAC,UAAA,EACA3B,SAAA,QAIAf,QAAA,CACAwB,SAAAb,EAAAE,WAAAY,QAAA,IACAkB,WAAA,KAIAlC,QAAA,CACAmC,QAAA,cACAC,WAAA,SACAC,eAAA,SACAC,MAAA,OACAC,cAAA,YAsIyB,CACzBC,KAAA,UADe,CAEdtE,yCCzODuE,8EADAC,IAAA,qBAAAC,gBAAAC,WAAAD,OAAAC,SAAAtF,eAMO,SAAAuF,IACP,GAAAJ,EACA,OAAAA,EAGA,IAAAC,IAAAC,OAAAC,SAAAE,KACA,sBAGA,IAAAC,EAAAJ,OAAAC,SAAAtF,cAAA,OAuBA,OAtBAyF,EAAAC,YAAAJ,SAAAK,eAAA,SACAF,EAAAG,IAAA,MACAH,EAAAI,MAAApC,SAAA,OACAgC,EAAAI,MAAAb,MAAA,MACAS,EAAAI,MAAAC,OAAA,MACAL,EAAAI,MAAA3C,SAAA,WACAuC,EAAAI,MAAAE,IAAA,UACAN,EAAAI,MAAAG,SAAA,SACAV,SAAAE,KAAAE,YAAAD,GACAN,EAAA,UAEAM,EAAAQ,WAAA,EACAd,EAAA,WAEAM,EAAAQ,WAAA,EAEA,IAAAR,EAAAQ,aACAd,EAAA,aAIAG,SAAAE,KAAAU,YAAAT,GACAN,EAGO,SAAAgB,EAAAC,EAAAC,GACP,IAAAJ,EAAAG,EAAAH,WAEA,WAAAI,EACA,OAAAJ,EAGA,IAAAK,EAAAf,IAEA,qBAAAe,EACA,OAAAC,OAAAC,IAGA,OAAAF,GACA,eACA,OAAAF,EAAAK,YAAAL,EAAAM,YAAAT,EAEA,cACA,OAAAG,EAAAK,YAAAL,EAAAM,YAAAT,EAGA,OAAAA,EC/DA,SAAAU,EAAAC,GACA,SAAAC,KAAAC,IAAAD,KAAAE,GAAAH,EAAAC,KAAAE,GAAA,MCIA,IAAIC,EAAM,CACVhC,MAAA,GACAc,OAAA,GACA5C,SAAA,WACA6C,KAAA,KACAC,SAAA,UAQe,SAAAiB,EAAAlG,GACf,IAAAY,EAAAZ,EAAAY,SACAO,EAAczC,OAAAyH,EAAA,EAAAzH,CAAwBsB,EAAA,cAEtCoG,EAAwBC,EAAAvG,EAAKwG,SAC7BC,EAAgBF,EAAAvG,EAAKwG,OAAA,MAErBE,EAAA,WACAJ,EAAAK,QAAAF,EAAAE,QAAAC,aAAAH,EAAAE,QAAAE,cAsBA,OAnBEN,EAAAvG,EAAK8G,UAAA,WACP,IAAAC,EAAuBnI,OAAAoI,EAAA,EAAApI,CAAQ,WAC/B,IAAAqI,EAAAX,EAAAK,QACAD,IAEAO,IAAAX,EAAAK,SACA7F,EAAAwF,EAAAK,WAIA,OADAnC,OAAA0C,iBAAA,SAAAH,GACA,WACAA,EAAAI,QACA3C,OAAA4C,oBAAA,SAAAL,KAEG,CAAAjG,IACDyF,EAAAvG,EAAK8G,UAAA,WACPJ,IACA5F,EAAAwF,EAAAK,UACG,CAAA7F,IACMyF,EAAAvG,EAAKb,cAAA,MAAsBP,OAAAyI,EAAA,EAAAzI,CAAQ,CAC5CoG,MAAWmB,EACXhG,IAAAsG,GACGpF,uBClBCiG,EAAef,EAAAvG,EAAKC,WAAA,SAAAC,EAAAC,GACxB,IAAAC,EAAAF,EAAAE,QACAC,EAAAH,EAAAG,UACA6C,EAAAhD,EAAAgD,MACAqE,EAAArH,EAAAqH,YACAlG,EAAczC,OAAAyH,EAAA,EAAAzH,CAAwBsB,EAAA,+CAEtC,OAASqG,EAAAvG,EAAKb,cAAA,OAAuBP,OAAAyI,EAAA,EAAAzI,CAAQ,CAC7CyB,UAAezB,OAAA4I,EAAA,EAAA5I,CAAIwB,EAAAmB,KAAAnB,EAAA,QAAAoB,OAAsC5C,OAAA6I,EAAA,EAAA7I,CAAUsE,KAAA7C,EAAA,CACnEqH,SAAAtH,EAAAsH,UACKH,IACLpH,OACGkB,MAyBYsG,EAAA/I,OAAAgJ,EAAA,EAAAhJ,CA/DE,SAAAmD,GACjB,OACAR,KAAA,CACAc,SAAA,WACA4C,OAAA,EACA4C,OAAA,EACA1D,MAAA,OACA2D,WAAA/F,EAAAgG,YAAAC,UAEAC,aAAA,CACAC,gBAAAnG,EAAAwB,QAAAG,QAAAC,MAEAwE,eAAA,CACAD,gBAAAnG,EAAAwB,QAAAE,UAAAE,MAEA+D,SAAA,CACAzC,OAAA,OACAd,MAAA,EACAiE,MAAA,KA6CgC,CAChC/D,KAAA,uBADe,CAEZiD,WClEYe,EAAAzJ,OAAA0J,EAAA,GAAc/B,EAAAvG,EAAKb,cAAA,QAClCC,EAAA,uDACC,qBCFcmJ,EAAA3J,OAAA0J,EAAA,GAAc/B,EAAAvG,EAAKb,cAAA,QAClCC,EAAA,qDACC,+BCoBDoJ,EAAWjC,EAAAvG,EAAKb,cAAekJ,EAAiB,CAChDzF,SAAA,UAGA6F,EAAYlC,EAAAvG,EAAKb,cAAeoJ,EAAkB,CAClD3F,SAAA,UAGI8F,EAAkBnC,EAAAvG,EAAKC,WAAA,SAAAC,EAAAC,GAC3B,IAAAC,EAAAF,EAAAE,QACAuI,EAAAzI,EAAAG,UACAmF,EAAAtF,EAAAsF,UACA+B,EAAArH,EAAAqH,YACAqB,EAAA1I,EAAA0I,QACAvH,EAAczC,OAAAyH,EAAA,EAAAzH,CAAwBsB,EAAA,6DAEtCG,EAAkBzB,OAAA4I,EAAA,EAAA5I,CAAIwB,EAAAmB,KAAAoH,EAAA,CACtBjB,SAAAtH,EAAAsH,UACGH,IAEH,OAAAqB,EAMSrC,EAAAvG,EAAKb,cAAe0J,EAAA,EAAYjK,OAAAyI,EAAA,EAAAzI,CAAQ,CACjDkK,UAAA,MACAzI,YACAF,MACAuB,KAAA,KACAqH,SAAA,MACG1H,GAAA,SAAAmE,EAAAgD,EAAAC,GAXQlC,EAAAvG,EAAKb,cAAA,OAChBkB,gBAuCe2I,EAAApK,OAAAgJ,EAAA,EAAAhJ,CA9EE,CACjB2C,KAAA,CACA4C,MAAA,GACA3B,WAAA,GAEAkF,SAAA,CACAvD,MAAA,OACAc,OAAA,GACAgE,QAAA,CACAC,UAAA,mBAqEgC,CAChC7E,KAAA,0BADe,CAEZqE,oBCJCS,EAAO5C,EAAAvG,EAAKC,WAAA,SAAAC,EAAAC,GAChB,IAAAiJ,EAAAlJ,EAAAkJ,OACAC,EAAAnJ,EAAAoJ,SACAA,OAAA,IAAAD,KACAE,EAAArJ,EAAAsJ,SACApJ,EAAAF,EAAAE,QACAC,EAAAH,EAAAG,UACAoJ,EAAAvJ,EAAA4I,UACAY,OAAA,IAAAD,EAAA,MAAAA,EACAE,EAAAzJ,EAAA0J,eACAA,OAAA,IAAAD,EAAA,YAAAA,EACA7I,EAAAZ,EAAAY,SACA+I,EAAA3J,EAAAqH,YACAA,OAAA,IAAAsC,EAAA,aAAAA,EACAC,EAAA5J,EAAA6J,sBACAA,OAAA,IAAAD,EAAiEd,EAAec,EAChFE,EAAA9J,EAAA+J,cACAA,OAAA,IAAAD,EAAA,OAAAA,EACAE,EAAAhK,EAAAiK,kBACAA,OAAA,IAAAD,EAAA,GAA+DA,EAC/DjJ,EAAAf,EAAAgB,UACAA,OAAA,IAAAD,EAAA,UAAAA,EACAlC,EAAAmB,EAAAnB,MACAqL,EAAAlK,EAAAmK,QACAA,OAAA,IAAAD,EAAA,WAAAA,EACA/I,EAAczC,OAAAyH,EAAA,EAAAzH,CAAwBsB,EAAA,wMAEtC6B,EAAcnD,OAAA0L,EAAA,EAAA1L,GACd2L,EAAA,eAAAF,EACAG,EAAA,QAAAzI,EAAAyD,UACAkC,EAAA,aAAAH,EACAkD,EAAA/C,EAAA,yBACAgD,EAAAhD,EAAA,aACAiD,EAAAjD,EAAA,iBACAkD,EAAAlD,EAAA,6BACAmD,EAAAnD,EAAA,iBAQA,IAAAoD,EAAwBvE,EAAAvG,EAAK+K,UAAA,GAC7BC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAEAI,GAAyB3E,EAAAvG,EAAK+K,SAAA,IAC9BI,GAAAD,GAAA,GACAE,GAAAF,GAAA,GAEAG,GAAyB9E,EAAAvG,EAAK+K,SAAA,CAC9BL,OAAA,EACAC,KAAA,IAEAW,GAAAD,GAAA,GACAE,GAAAF,GAAA,GAEAG,GAAyBjF,EAAAvG,EAAK+K,SAAA,CAC9B5F,SAAA,SACAnC,aAAA,OAEAyI,GAAAD,GAAA,GACAE,GAAAF,GAAA,GAEAG,GAAA,IAAAC,IACAC,GAAgBtF,EAAAvG,EAAKwG,OAAA,MACrBsF,GAA2BvF,EAAAvG,EAAKwG,OAAA,MAEhCuF,GAAA,WACA,IACAC,EAkBAC,EAnBAC,EAAAL,GAAAlF,QAGA,GAAAuF,EAAA,CACA,IAAAC,EAAAD,EAAAE,wBAEAJ,EAAA,CACAnG,YAAAqG,EAAArG,YACAT,WAAA8G,EAAA9G,WACAiH,UAAAH,EAAAG,UACAC,qBAA8BhH,EAAuB4G,EAAAnK,EAAAyD,WACrDI,YAAAsG,EAAAtG,YACAV,IAAAiH,EAAAjH,IACA2C,OAAAsE,EAAAtE,OACA0E,KAAAJ,EAAAI,KACAnE,MAAA+D,EAAA/D,OAMA,GAAA8D,IAAA,IAAAnN,EAAA,CACA,IAAAyN,EAAAV,GAAAnF,QAAA6C,SAEA,GAAAgD,EAAAC,OAAA,GACA,IAAAC,EAAAF,EAAAb,GAAAgB,IAAA5N,IAEY,EAMZkN,EAAAS,IAAAN,wBAAA,MAIA,OACAJ,WACAC,YAIAW,GAA6BhO,OAAAiO,EAAA,EAAAjO,CAAgB,WAC7C,IAAAkO,EAEAC,EAAAhB,KACAC,EAAAe,EAAAf,SACAC,EAAAc,EAAAd,QAEAe,EAAA,EAEA,GAAAf,GAAAD,EACA,GAAAtE,EACAsF,EAAAf,EAAA/G,IAAA8G,EAAA9G,IAAA8G,EAAAK,cACO,CACP,IAAAY,EAAAzC,EAAAwB,EAAAM,qBAAAN,EAAAnG,YAAAmG,EAAApG,YAAAoG,EAAA5G,WACA4H,EAAAf,EAAAM,KAAAP,EAAAO,KAAAU,EAIA,IAAAC,GAAAJ,EAAA,GAAsDlO,OAAAC,EAAA,EAAAD,CAAekO,EAAApC,EAAAsC,GAAyCpO,OAAAC,EAAA,EAAAD,CAAekO,EAAAjC,EAAAoB,IAAApB,GAAA,GAAAiC,GAE7H,GAAAK,MAAAhC,GAAAT,KAAAyC,MAAAhC,GAAAN,IACAO,GAAA8B,OACK,CACL,IAAAE,EAAApH,KAAAqH,IAAAlC,GAAAT,GAAAwC,EAAAxC,IACA4C,EAAAtH,KAAAqH,IAAAlC,GAAAN,GAAAqC,EAAArC,KAEAuC,GAAA,GAAAE,GAAA,IACAlC,GAAA8B,MAKAK,GAAA,SAAAC,INpOe,SAAAC,EAAAlI,EAAAmI,GACf,IAAAC,EAAAC,UAAAnB,OAAA,QAAAoB,IAAAD,UAAA,GAAAA,UAAA,MACAE,EAAAF,UAAAnB,OAAA,QAAAoB,IAAAD,UAAA,GAAAA,UAAA,gBACAG,EAAAJ,EAAAK,KACAA,OAAA,IAAAD,EAAAjI,EAAAiI,EACAE,EAAAN,EAAAO,SACAA,OAAA,IAAAD,EAAA,IAAAA,EACAvD,EAAA,KACAyD,EAAA5I,EAAAkI,GACAW,GAAA,EAEAC,EAAA,WACAD,GAAA,GA0BAD,IAAAT,EACAI,EAAA,IAAAQ,MAAA,uCAIAC,sBA5BA,SAAAC,EAAAC,GACA,GAAAL,EACAN,EAAA,IAAAQ,MAAA,4BADA,CAKA,OAAA5D,IACAA,EAAA+D,GAGA,IAAA1I,EAAAC,KAAA0I,IAAA,GAAAD,EAAA/D,GAAAwD,GACA3I,EAAAkI,GAAAO,EAAAjI,IAAA2H,EAAAS,KAEApI,GAAA,EACAwI,sBAAA,WACAT,EAAA,QAKAS,sBAAAC,MMkMIG,CAAOlE,EAAAoB,GAAAlF,QAAA6G,IAGXoB,GAAA,SAAAC,GACA,IAAArB,EAAA3B,GAAAlF,QAAA8D,GAEA/C,EACA8F,GAAAqB,GAEArB,GAAAqB,GAAArE,GAAA,KAEAgD,GAAAhD,GAA8C,YAAhB9F,KAAgB,KAG9C6I,GAAAC,IAGAsB,GAAA,WACAF,IAAA/C,GAAAlF,QAAAiE,KAGAmE,GAAA,WACAH,GAAA/C,GAAAlF,QAAAiE,KAGAoE,GAAkCzI,EAAAvG,EAAKiP,YAAA,SAAA3I,GACvCoF,GAAA,CACAvG,SAAA,KACAnC,cAAAsD,KAEG,IA2BH4I,GAA+BtQ,OAAAiO,EAAA,EAAAjO,CAAgB,WAC/C,IAAAuQ,EAAApD,KACAC,EAAAmD,EAAAnD,SACAC,EAAAkD,EAAAlD,QAEA,GAAAA,GAAAD,EAIA,GAAAC,EAAAvB,GAAAsB,EAAAtB,GAAA,CAEA,IAAA0E,EAAApD,EAAAvB,IAAAwB,EAAAvB,GAAAsB,EAAAtB,IACA6C,GAAA6B,QACK,GAAAnD,EAAAtB,GAAAqB,EAAArB,GAAA,CAEL,IAAA0E,EAAArD,EAAAvB,IAAAwB,EAAAtB,GAAAqB,EAAArB,IAEA4C,GAAA8B,MAGAC,GAAgC1Q,OAAAiO,EAAA,EAAAjO,CAAgB,WAChD,GAAA2L,GAAA,QAAAN,EAAA,CACA,IAMAsF,EACAC,EAPAC,EAAA5D,GAAAlF,QACA0F,EAAAoD,EAAApD,UACAqD,EAAAD,EAAAC,aACA7I,EAAA4I,EAAA5I,aACAjB,EAAA6J,EAAA7J,YACAC,EAAA4J,EAAA5J,YAIA,GAAA6B,EACA6H,EAAAlD,EAAA,EACAmD,EAAAnD,EAAAqD,EAAA7I,EAAA,MACO,CACP,IAAAzB,EAAyBE,EAAuBuG,GAAAlF,QAAA5E,EAAAyD,WAEhD+J,EAAA/E,EAAApF,EAAAQ,EAAAC,EAAA,EAAAT,EAAA,EACAoK,EAAAhF,EAAApF,EAAA,EAAAA,EAAAQ,EAAAC,EAAA,EAGA0J,IAAAjE,GAAAZ,OAAA8E,IAAAlE,GAAAX,KACAY,GAAA,CACAb,MAAA6E,EACA5E,IAAA6E,OAKEjJ,EAAAvG,EAAK8G,UAAA,WACP,IAAAC,EAAuBnI,OAAAoI,EAAA,EAAApI,CAAQ,WAC/BgO,KACA0C,OAEAK,EAAc/Q,OAAAgR,EAAA,EAAAhR,CAAWiN,GAAAlF,SAEzB,OADAgJ,EAAAzI,iBAAA,SAAAH,GACA,WACAA,EAAAI,QACAwI,EAAAvI,oBAAA,SAAAL,KAEG,CAAA6F,GAAA0C,KACH,IAAAO,GAAyBtJ,EAAAvG,EAAKiP,YAAarQ,OAAAoI,EAAA,EAAApI,CAAQ,WACnD0Q,QAEE/I,EAAAvG,EAAK8G,UAAA,WACP,kBACA+I,GAAA1I,UAEG,CAAA0I,KACDtJ,EAAAvG,EAAK8G,UAAA,WACPmE,GAAA,IACG,IACD1E,EAAAvG,EAAK8G,UAAA,WACP8F,KACA0C,OAEE/I,EAAAvG,EAAK8G,UAAA,WACPoI,MACG,CAAAA,GAAA/D,KACD5E,EAAAvG,EAAK8P,oBAAA1G,EAAA,WACP,OACA2G,gBAAAnD,GACAoD,oBAAAV,KAEG,CAAA1C,GAAA0C,KACH,IAAA1O,GAAkB2F,EAAAvG,EAAKb,cAAewI,EAAc/I,OAAAyI,EAAA,EAAAzI,CAAQ,CAC5DyB,UAAAD,EAAAQ,UACA2G,cACArE,MAAA0G,GACGO,EAAA,CACHnF,MAAWpG,OAAAyI,EAAA,EAAAzI,CAAQ,GAAGuM,GAAA,GAAoBhB,EAAAnF,UAE1CiL,GAAA,EACAzG,GAAiBjD,EAAAvG,EAAKkQ,SAAAC,IAAA5G,EAAA,SAAA6G,GACtB,IAAS7J,EAAAvG,EAAKqQ,eAAAD,GACd,YASA,IAAAE,OAAAzC,IAAAuC,EAAAlQ,MAAAnB,MAAAkR,GAAAG,EAAAlQ,MAAAnB,MACA4M,GAAA4E,IAAAD,EAAAL,IACA,IAAAjP,EAAAsP,IAAAvR,EAEA,OADAkR,IAAA,EACW1J,EAAAvG,EAAKwQ,aAAAJ,EAAA,CAChB1P,UAAA,cAAA2J,EACAzJ,UAAAI,IAAAgK,GAAApK,GACAI,WACAF,WACAI,YACAnC,MAAAuR,MAGAG,GA9IA,WACA,IAAAA,EAAA,GACAA,EAAAC,sBAAAnG,EAA6DhE,EAAAvG,EAAKb,cAAeiH,EAAa,CAC9F/F,UAAAD,EAAAmK,WACAzJ,SAAAkO,KACK,KACL,IAAA2B,EAAArF,GAAAZ,OAAAY,GAAAX,IACAiG,EAAArG,IAAA,SAAAN,GAAA0G,GAAA,YAAA1G,GAAA,OAAAA,GAeA,OAdAwG,EAAAI,kBAAAD,EAAgErK,EAAAvG,EAAKb,cAAA4K,EAAA,CACrExC,cACA/B,UAAAgF,EAAA,eACAzJ,QAAA+N,GACAlG,QAAA0C,GAAAZ,MACArK,UAAiBzB,OAAA4I,EAAA,EAAA5I,CAAIwB,EAAA6J,cAAA,OAAAA,GAAA7J,EAAA0Q,wBAChB,KACLL,EAAAM,gBAAAH,EAA8DrK,EAAAvG,EAAKb,cAAA4K,EAAA,CACnExC,cACA/B,UAAAgF,EAAA,eACAzJ,QAAAgO,GACAnG,QAAA0C,GAAAX,IACAtK,UAAiBzB,OAAA4I,EAAA,EAAA5I,CAAIwB,EAAA6J,cAAA,OAAAA,GAAA7J,EAAA0Q,wBAChB,KACLL,EAwHAO,GACA,OAASzK,EAAAvG,EAAKb,cAAAuK,EAA0B9K,OAAAyI,EAAA,EAAAzI,CAAQ,CAChDyB,UAAezB,OAAA4I,EAAA,EAAA5I,CAAIwB,EAAAmB,KAAAlB,EAAAqH,GAAAtH,EAAAsH,UACnBvH,OACGkB,GAAAoP,GAAAI,kBAAAJ,GAAAC,sBAA4FnK,EAAAvG,EAAKb,cAAA,OACpGkB,UAAezB,OAAA4I,EAAA,EAAA5I,CAAIwB,EAAA6Q,SAAA1G,EAAAnK,EAAAmK,WAAAnK,EAAA8Q,OACnBlM,MAAAyG,GACAtL,IAAA0L,GACAsF,SAAAtB,IACKtJ,EAAAvG,EAAKb,cAAA,OACVkB,UAAezB,OAAA4I,EAAA,EAAA5I,CAAIwB,EAAAgR,cAAA1J,GAAAtH,EAAAiR,sBAAA/H,IAAAiB,GAAAnK,EAAAkJ,UACnBnJ,IAAA2L,GACApK,KAAA,WACG8H,IAAAwB,GAAApK,IAAA6P,GAAAM,mBAqGYjP,EAAA,EAAAlD,OAAAgJ,EAAA,EAAAhJ,CAvfE,SAAAmD,GACjB,OAEAR,KAAA,CACA4D,SAAA,SACA5C,UAAA,GACA+O,wBAAA,QAEAtN,QAAA,QAIA0D,SAAA,CACAtD,cAAA,UAIAgN,cAAA,CACApN,QAAA,QAIAqN,sBAAA,CACAjN,cAAA,UAIAkF,SAAA,CACApF,eAAA,UAIA+M,SAAA,CACA5O,SAAA,WACA2B,QAAA,eACAuN,KAAA,WACAC,WAAA,UAIAN,MAAA,CACAO,UAAA,SACAtN,MAAA,QAIAoG,WAAA,CACAkH,UAAA,SAEAC,eAAA,OAEAC,uBAAA,CACA3N,QAAA,SAMAiG,cAAA,GAGA6G,qBAA0BlS,OAAAC,EAAA,EAAAD,CAAe,GAAGmD,EAAAW,YAAAkP,KAAA,OAC5C5N,QAAA,SAIApD,UAAA,KAqbgC,CAChCyD,KAAA,WADe,CAEZ8E","file":"static/js/14.827a730c.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport unsupportedProp from '../utils/unsupportedProp';\nexport var styles = function styles(theme) {\n  var _extends2;\n\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, (_extends2 = {\n      maxWidth: 264,\n      minWidth: 72,\n      position: 'relative',\n      boxSizing: 'border-box',\n      minHeight: 48,\n      flexShrink: 0,\n      padding: '6px 12px'\n    }, _defineProperty(_extends2, theme.breakpoints.up('sm'), {\n      padding: '6px 24px'\n    }), _defineProperty(_extends2, \"overflow\", 'hidden'), _defineProperty(_extends2, \"whiteSpace\", 'normal'), _defineProperty(_extends2, \"textAlign\", 'center'), _defineProperty(_extends2, theme.breakpoints.up('sm'), {\n      fontSize: theme.typography.pxToRem(13),\n      minWidth: 160\n    }), _extends2)),\n\n    /* Styles applied to the root element if both `icon` and `label` are provided. */\n    labelIcon: {\n      minHeight: 72,\n      paddingTop: 9,\n      '& $wrapper > *:first-child': {\n        marginBottom: 6\n      }\n    },\n\n    /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor=\"inherit\"`. */\n    textColorInherit: {\n      color: 'inherit',\n      opacity: 0.7,\n      '&$selected': {\n        opacity: 1\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor=\"primary\"`. */\n    textColorPrimary: {\n      color: theme.palette.text.secondary,\n      '&$selected': {\n        color: theme.palette.primary.main\n      },\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    },\n\n    /* Styles applied to the root element if the parent [`Tabs`](/api/tabs/) has `textColor=\"secondary\"`. */\n    textColorSecondary: {\n      color: theme.palette.text.secondary,\n      '&$selected': {\n        color: theme.palette.secondary.main\n      },\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}` (controlled by the Tabs component). */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}` (controlled by the Tabs component). */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}` (controlled by the Tabs component). */\n    fullWidth: {\n      flexShrink: 1,\n      flexGrow: 1,\n      flexBasis: 0,\n      maxWidth: 'none'\n    },\n\n    /* Styles applied to the root element if `wrapped={true}`. */\n    wrapped: {\n      fontSize: theme.typography.pxToRem(12),\n      lineHeight: 1.5\n    },\n\n    /* Styles applied to the `icon` and `label`'s wrapper element. */\n    wrapper: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      flexDirection: 'column'\n    }\n  };\n};\nvar Tab = React.forwardRef(function Tab(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      fullWidth = props.fullWidth,\n      icon = props.icon,\n      indicator = props.indicator,\n      label = props.label,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$textColor = props.textColor,\n      textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor,\n      value = props.value,\n      _props$wrapped = props.wrapped,\n      wrapped = _props$wrapped === void 0 ? false : _props$wrapped,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"icon\", \"indicator\", \"label\", \"onChange\", \"onClick\", \"selected\", \"textColor\", \"value\", \"wrapped\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onChange) {\n      onChange(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return React.createElement(ButtonBase, _extends({\n    focusRipple: !disableFocusRipple,\n    className: clsx(classes.root, classes[\"textColor\".concat(capitalize(textColor))], className, disabled && classes.disabled, selected && classes.selected, label && icon && classes.labelIcon, fullWidth && classes.fullWidth, wrapped && classes.wrapped),\n    ref: ref,\n    role: \"tab\",\n    \"aria-selected\": selected,\n    disabled: disabled,\n    onClick: handleChange\n  }, other), React.createElement(\"span\", {\n    className: classes.wrapper\n  }, icon, label), indicator);\n});\nprocess.env.NODE_ENV !== \"production\" ? Tab.propTypes = {\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the tab will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The icon element.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   * For server-side rendering consideration, we let the selected tab\n   * render the indicator.\n   */\n  indicator: PropTypes.node,\n\n  /**\n   * The label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  textColor: PropTypes.oneOf(['secondary', 'primary', 'inherit']),\n\n  /**\n   * You can provide your own value. Otherwise, we fallback to the child position index.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Tab labels appear in a single row.\n   * They can use a second line if needed.\n   */\n  wrapped: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTab'\n})(Tab);","// Based on https://github.com/react-bootstrap/dom-helpers/blob/master/src/util/inDOM.js\nvar inDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nvar cachedType;\nexport function _setScrollType(type) {\n  cachedType = type;\n} // Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\n\nexport function detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n\n  if (!inDOM || !window.document.body) {\n    return 'indeterminate';\n  }\n\n  var dummy = window.document.createElement('div');\n  dummy.appendChild(document.createTextNode('ABCD'));\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n\n  document.body.removeChild(dummy);\n  return cachedType;\n} // Based on https://stackoverflow.com/a/24394376\n\nexport function getNormalizedScrollLeft(element, direction) {\n  var scrollLeft = element.scrollLeft; // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\n\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n\n  var type = detectScrollType();\n\n  if (type === 'indeterminate') {\n    return Number.NaN;\n  }\n\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n  }\n\n  return scrollLeft;\n}\nexport function setNormalizedScrollLeft(element, scrollLeft, direction) {\n  // Perform the calculations only when direction is rtl to avoid messing up the ltr bahavior\n  if (direction !== 'rtl') {\n    element.scrollLeft = scrollLeft;\n    return;\n  }\n\n  var type = detectScrollType();\n\n  if (type === 'indeterminate') {\n    return;\n  }\n\n  switch (type) {\n    case 'negative':\n      element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\n      break;\n\n    case 'reverse':\n      element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\n      break;\n\n    default:\n      element.scrollLeft = scrollLeft;\n      break;\n  }\n}","function easeInOutSin(time) {\n  return (1 + Math.sin(Math.PI * time - Math.PI / 2)) / 2;\n}\n\nexport default function animate(property, element, to) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var cb = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function () {};\n  var _options$ease = options.ease,\n      ease = _options$ease === void 0 ? easeInOutSin : _options$ease,\n      _options$duration = options.duration,\n      duration = _options$duration === void 0 ? 300 : _options$duration;\n  var start = null;\n  var from = element[property];\n  var cancelled = false;\n\n  var cancel = function cancel() {\n    cancelled = true;\n  };\n\n  var step = function step(timestamp) {\n    if (cancelled) {\n      cb(new Error('Animation cancelled'));\n      return;\n    }\n\n    if (start === null) {\n      start = timestamp;\n    }\n\n    var time = Math.min(1, (timestamp - start) / duration);\n    element[property] = ease(time) * (to - from) + from;\n\n    if (time >= 1) {\n      requestAnimationFrame(function () {\n        cb(null);\n      });\n      return;\n    }\n\n    requestAnimationFrame(step);\n  };\n\n  if (from === to) {\n    cb(new Error('Element already at target position'));\n    return cancel;\n  }\n\n  requestAnimationFrame(step);\n  return cancel;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nvar styles = {\n  width: 99,\n  height: 99,\n  position: 'absolute',\n  top: -9999,\n  overflow: 'scroll'\n};\n/**\n * @ignore - internal component.\n * The component is originates from https://github.com/STORIS/react-scrollbar-size.\n * It has been moved into the core in order to minimize the bundle size.\n */\n\nexport default function ScrollbarSize(props) {\n  var onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"onChange\"]);\n\n  var scrollbarHeight = React.useRef();\n  var nodeRef = React.useRef(null);\n\n  var setMeasurements = function setMeasurements() {\n    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;\n  };\n\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      var prevHeight = scrollbarHeight.current;\n      setMeasurements();\n\n      if (prevHeight !== scrollbarHeight.current) {\n        onChange(scrollbarHeight.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [onChange]);\n  React.useEffect(function () {\n    setMeasurements();\n    onChange(scrollbarHeight.current);\n  }, [onChange]);\n  return React.createElement(\"div\", _extends({\n    style: styles,\n    ref: nodeRef\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? ScrollbarSize.propTypes = {\n  onChange: PropTypes.func.isRequired\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'absolute',\n      height: 2,\n      bottom: 0,\n      width: '100%',\n      transition: theme.transitions.create()\n    },\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n    vertical: {\n      height: '100%',\n      width: 2,\n      right: 0\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar TabIndicator = React.forwardRef(function TabIndicator(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      color = props.color,\n      orientation = props.orientation,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"orientation\"]);\n\n  return React.createElement(\"span\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      vertical: classes.vertical\n    }[orientation]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabIndicator.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   * The color of the tab indicator.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']).isRequired,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabIndicator'\n})(TabIndicator);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/aria-role */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = {\n  root: {\n    width: 40,\n    flexShrink: 0\n  },\n  vertical: {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: 'rotate(90deg)'\n    }\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = React.createElement(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nvar TabScrollButton = React.forwardRef(function TabScrollButton(props, ref) {\n  var classes = props.classes,\n      classNameProp = props.className,\n      direction = props.direction,\n      orientation = props.orientation,\n      visible = props.visible,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"direction\", \"orientation\", \"visible\"]);\n\n  var className = clsx(classes.root, classNameProp, {\n    vertical: classes.vertical\n  }[orientation]);\n\n  if (!visible) {\n    return React.createElement(\"div\", {\n      className: className\n    });\n  }\n\n  return React.createElement(ButtonBase, _extends({\n    component: \"div\",\n    className: className,\n    ref: ref,\n    role: null,\n    tabIndex: null\n  }, other), direction === 'left' ? _ref : _ref2);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Which direction should the button indicate?\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * Should the button be present or just consume space.\n   */\n  visible: PropTypes.bool.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabScrollButton'\n})(TabScrollButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from 'normalize-scroll-left';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from './TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      display: 'flex'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\n    flexContainerVertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"`. */\n    scrollable: {\n      overflowX: 'scroll',\n      // Hide dimensionless scrollbar on MacOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n\n      }\n    },\n\n    /* Styles applied to the `ScrollButtonComponent` component. */\n    scrollButtons: {},\n\n    /* Styles applied to the `ScrollButtonComponent` component if `scrollButtons=\"auto\"` or scrollButtons=\"desktop\"`. */\n    scrollButtonsDesktop: _defineProperty({}, theme.breakpoints.down('xs'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the `TabIndicator` component. */\n    indicator: {}\n  };\n};\nvar Tabs = React.forwardRef(function Tabs(props, ref) {\n  var action = props.action,\n      _props$centered = props.centered,\n      centered = _props$centered === void 0 ? false : _props$centered,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$indicatorColor = props.indicatorColor,\n      indicatorColor = _props$indicatorColor === void 0 ? 'secondary' : _props$indicatorColor,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$ScrollButtonCo = props.ScrollButtonComponent,\n      ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? TabScrollButton : _props$ScrollButtonCo,\n      _props$scrollButtons = props.scrollButtons,\n      scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons,\n      _props$TabIndicatorPr = props.TabIndicatorProps,\n      TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\n      _props$textColor = props.textColor,\n      textColor = _props$textColor === void 0 ? 'inherit' : _props$textColor,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"TabIndicatorProps\", \"textColor\", \"value\", \"variant\"]);\n\n  var theme = useTheme();\n  var scrollable = variant === 'scrollable';\n  var isRtl = theme.direction === 'rtl';\n  var vertical = orientation === 'vertical';\n  var scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  var start = vertical ? 'top' : 'left';\n  var end = vertical ? 'bottom' : 'right';\n  var clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  var size = vertical ? 'height' : 'width';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: you can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  var _React$useState = React.useState(false),\n      mounted = _React$useState[0],\n      setMounted = _React$useState[1];\n\n  var _React$useState2 = React.useState({}),\n      indicatorStyle = _React$useState2[0],\n      setIndicatorStyle = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    start: false,\n    end: false\n  }),\n      displayScroll = _React$useState3[0],\n      setDisplayScroll = _React$useState3[1];\n\n  var _React$useState4 = React.useState({\n    overflow: 'hidden',\n    marginBottom: null\n  }),\n      scrollerStyle = _React$useState4[0],\n      setScrollerStyle = _React$useState4[1];\n\n  var valueToIndex = new Map();\n  var tabsRef = React.useRef(null);\n  var childrenWrapperRef = React.useRef(null);\n\n  var getTabsMeta = function getTabsMeta() {\n    var tabsNode = tabsRef.current;\n    var tabsMeta;\n\n    if (tabsNode) {\n      var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    var tabMeta;\n\n    if (tabsNode && value !== false) {\n      var _children = childrenWrapperRef.current.children;\n\n      if (_children.length > 0) {\n        var tab = _children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([\"Material-UI: the value provided `\".concat(value, \"` to the Tabs component is invalid.\"), 'None of the Tabs children have this value.', valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(valueToIndex.keys()).join(', '), \".\") : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta: tabsMeta,\n      tabMeta: tabMeta\n    };\n  };\n\n  var updateIndicatorState = useEventCallback(function () {\n    var _newIndicatorStyle;\n\n    var _getTabsMeta = getTabsMeta(),\n        tabsMeta = _getTabsMeta.tabsMeta,\n        tabMeta = _getTabsMeta.tabMeta;\n\n    var startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    var newIndicatorStyle = (_newIndicatorStyle = {}, _defineProperty(_newIndicatorStyle, start, startValue), _defineProperty(_newIndicatorStyle, size, tabMeta ? tabMeta[size] : 0), _newIndicatorStyle);\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      var dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      var dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  var scroll = function scroll(scrollValue) {\n    animate(scrollStart, tabsRef.current, scrollValue);\n  };\n\n  var moveTabsScroll = function moveTabsScroll(delta) {\n    var scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  var handleStartScrollClick = function handleStartScrollClick() {\n    moveTabsScroll(-tabsRef.current[clientSize]);\n  };\n\n  var handleEndScrollClick = function handleEndScrollClick() {\n    moveTabsScroll(tabsRef.current[clientSize]);\n  };\n\n  var handleScrollbarSizeChange = React.useCallback(function (scrollbarHeight) {\n    setScrollerStyle({\n      overflow: null,\n      marginBottom: -scrollbarHeight\n    });\n  }, []);\n\n  var getConditionalElements = function getConditionalElements() {\n    var conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? React.createElement(ScrollbarSize, {\n      className: classes.scrollable,\n      onChange: handleScrollbarSizeChange\n    }) : null;\n    var scrollButtonsActive = displayScroll.start || displayScroll.end;\n    var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === 'desktop' || scrollButtons === 'on');\n    conditionalElements.scrollButtonStart = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      visible: displayScroll.start,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? React.createElement(ScrollButtonComponent, {\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      visible: displayScroll.end,\n      className: clsx(classes.scrollButtons, scrollButtons !== 'on' && classes.scrollButtonsDesktop)\n    }) : null;\n    return conditionalElements;\n  };\n\n  var scrollSelectedIntoView = useEventCallback(function () {\n    var _getTabsMeta2 = getTabsMeta(),\n        tabsMeta = _getTabsMeta2.tabsMeta,\n        tabMeta = _getTabsMeta2.tabMeta;\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart);\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n\n      scroll(_nextScrollStart);\n    }\n  });\n  var updateScrollButtonState = useEventCallback(function () {\n    if (scrollable && scrollButtons !== 'off') {\n      var _tabsRef$current = tabsRef.current,\n          scrollTop = _tabsRef$current.scrollTop,\n          scrollHeight = _tabsRef$current.scrollHeight,\n          clientHeight = _tabsRef$current.clientHeight,\n          scrollWidth = _tabsRef$current.scrollWidth,\n          clientWidth = _tabsRef$current.clientWidth;\n      var showStartScroll;\n      var showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        var scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    var win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  var handleTabsScroll = React.useCallback(debounce(function () {\n    updateScrollButtonState();\n  }));\n  React.useEffect(function () {\n    return function () {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(function () {\n    setMounted(true);\n  }, []);\n  React.useEffect(function () {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(function () {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, function () {\n    return {\n      updateIndicator: updateIndicatorState,\n      updateScrollButtons: updateScrollButtonState\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  var indicator = React.createElement(TabIndicator, _extends({\n    className: classes.indicator,\n    orientation: orientation,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, {}, TabIndicatorProps.style)\n  }));\n  var childIndex = 0;\n  var children = React.Children.map(childrenProp, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    var selected = childValue === value;\n    childIndex += 1;\n    return React.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected: selected,\n      onChange: onChange,\n      textColor: textColor,\n      value: childValue\n    });\n  });\n  var conditionalElements = getConditionalElements();\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, vertical && classes.vertical),\n    ref: ref\n  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, React.createElement(\"div\", {\n    className: clsx(classes.scroller, scrollable ? classes.scrollable : classes.fixed),\n    style: scrollerStyle,\n    ref: tabsRef,\n    onScroll: handleTabsScroll\n  }, React.createElement(\"div\", {\n    className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\n    ref: childrenWrapperRef,\n    role: \"tablist\"\n  }, children), mounted && indicator), conditionalElements.scrollButtonEnd);\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This property is intended for large views.\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   */\n  indicatorColor: PropTypes.oneOf(['secondary', 'primary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `desktop` will only present them on medium and larger viewports.\n   * - `on` will always present them.\n   * - `off` will never present them.\n   */\n  scrollButtons: PropTypes.oneOf(['auto', 'desktop', 'on', 'off']),\n\n  /**\n   * Props applied to the tab indicator element.\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   */\n  textColor: PropTypes.oneOf(['secondary', 'primary', 'inherit']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this property to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   *  Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   */\n  variant: PropTypes.oneOf(['standard', 'scrollable', 'fullWidth'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs'\n})(Tabs);"],"sourceRoot":""}