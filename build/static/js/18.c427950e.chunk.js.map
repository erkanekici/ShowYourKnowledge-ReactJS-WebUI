{"version":3,"sources":["containers/Step_02.js"],"names":["StepSecond","STEP_3_PATH","routePathByName","state","isErrorExist","errorMessageContent","onSubmit","values","actions","request","email","_this","props","setSubmitting","getTopic","then","data","arguments","length","undefined","Object","C_Users_asus_Desktop_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","pick","resp","hasError","setState","error","gameStatus","history","replace","getGameStatus","topicId","this","setStep","addGTM","document","getElementsByClassName","style","visibility","window","dataLayer","push","event","virtualPageURL","userId","transactionId","_this2","submitButtonStyle","backgroundColor","height","marginTop","submitButtonDisabledStyle","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","formik__WEBPACK_IMPORTED_MODULE_7__","initialValues","render","_ref","isSubmitting","errors","touched","react__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_12__","type","fullWidth","variant","color","disabled","_components_styled_FormElements__WEBPACK_IMPORTED_MODULE_13__","component","marginclear","Component","mapDispatchToProps","globalAction","offerProductList","getOfferedProductList","connect","global"],"mappings":"uPAsBMA,6MACJC,YAAcC,YAAgB,aAE9BC,MAAQ,CACNC,cAAc,EACdC,oBAAqB,MA0CvBC,SAAW,SAACC,EAAQC,GAClB,IAAMC,EACN,CACEC,MAAOC,EAAKC,MAAMF,OAGpBF,EAAQK,eAAc,GACtBF,EAAKG,SAASL,GAASM,KAAK,WAC1BP,EAAQK,eAAc,QAI1BC,SAAW,WAAe,IAAdE,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACjB,OAAON,EAAKC,MACXE,SADMM,OAAAC,EAAA,EAAAD,CAAA,GAEFJ,EAFE,GAGFM,YAAKX,EAAKC,MAAO,mBAEnBG,KAAK,SAACQ,GAEDZ,EAAKC,MAAMY,UACbb,EAAKc,SAAS,CAAErB,cAAc,IAC9BO,EAAKc,SAAS,CAAEpB,oBAAqBkB,EAAKG,UAG1Cf,EAAKc,SAAS,CAAErB,cAAc,IAC9BO,EAAKc,SAAS,CAAEpB,oBAAqB,KACT,GAAzBM,EAAKC,MAAMe,WAEZhB,EAAKC,MAAMgB,QAAQC,QAAQlB,EAAKV,aAIhCU,EAAKmB,cAAcnB,EAAKC,MAAMmB,eAMxCD,cAAgB,SAACC,GACf,OAAOpB,EAAKC,MACXkB,cADMV,OAAAC,EAAA,EAAAD,CAAA,CAELW,WACGT,YAAKX,EAAKC,MAAO,mBAEnBG,KAAK,SAACQ,GAEDZ,EAAKC,MAAMY,UACbb,EAAKc,SAAS,CAAErB,cAAc,IAC9BO,EAAKc,SAAS,CAAEpB,oBAAqBkB,EAAKG,UAG1Cf,EAAKc,SAAS,CAAErB,cAAc,IAC9BO,EAAKc,SAAS,CAAEpB,oBAAqB,KACT,GAAzBM,EAAKC,MAAMe,WAEZhB,EAAKC,MAAMgB,QAAQC,QAAQlB,EAAKV,aAGhCU,EAAKmB,cAAcnB,EAAKC,MAAMmB,gGAjGtCC,KAAKpB,MAAMqB,QAAQ,iBAGnBD,KAAKE,SAGLC,SAASC,uBAAuB,oBAAoB,GAAGC,MAAMC,WAAa,0CAW1EC,OAAOC,UAAUC,KAAK,CACpBC,MAAS,kBACTC,eAAkB,+BAClBC,OAAUZ,KAAKpB,MAAMiC,iDAmFhB,IAAAC,EAAAd,KACDe,EAAoB,CACxBC,gBAAiB,UACjBC,OAAQ,OACRC,UAAW,QAEPC,EAA4B,CAChCF,OAAQ,OACRC,UAAW,QAEb,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,cAAapC,OAAAC,EAAA,EAAAD,CAAA,GAAOY,KAAK7B,OACzBG,SAAU0B,KAAK1B,SACfmD,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,aAAHD,EAAiBE,OAAjBF,EAAyBG,QAAzB,OACNT,EAAAC,EAAAC,cAACQ,EAAA,SAAD,KACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,YACNC,SAAUT,EACVtB,MAAOsB,EAAeR,EAA4BJ,GANpD,qBAWDD,EAAKlC,MAAMR,cACVgD,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQC,UAAU,MAAMC,YAAY,QACjCzB,EAAKlC,MAAMP,gCA9IHmE,aAqKnBC,EAAqB,CACzB3D,SAAU4D,YAAa,YACvB5C,cAAe4C,YAAa,iBAC5BC,iBAAkBC,KAGLC,sBAnBS,SAAA1E,GACtB,OAAOiB,OAAAC,EAAA,EAAAD,CAAA,GACFE,YAAKnB,EAAM2E,OAAQ,CACpB,gBACA,aACA,UACA,WACA,mBAcJL,EAFaI,CAGb7E","file":"static/js/18.c427950e.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { Formik, Form } from 'formik'\r\nimport { connect } from 'react-redux'\r\nimport globalAction from '../store/global/actions'\r\nimport { routePathByName } from '../routes'\r\nimport { pick } from 'lodash-es'\r\nimport Button from '@material-ui/core/Button';\r\nimport { ErrMsg } from '../components/styled/FormElements'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { SetProductCode } from '../components/Products'\r\nimport { getOfferedProductList } from '../store/products/actions'\r\n\r\nclass StepSecond extends Component {\r\n  STEP_3_PATH = routePathByName('Step_03')\r\n\r\n  state = {\r\n    isErrorExist: false,\r\n    errorMessageContent: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setStep('dashboardStep')\r\n\r\n    //GoogleTagManager Events\r\n    this.addGTM()\r\n\r\n    //Captcha badge gizleme\r\n    document.getElementsByClassName(\"grecaptcha-badge\")[0].style.visibility = \"hidden\"\r\n\r\n    // this.props\r\n    //   .offerProductList({\r\n    //     transactionId: this.props.transactionId,\r\n    //     applicationNo: this.props.applicationNo\r\n    //   })\r\n    //   .finally(() => this.setState({ isLoading: false }))\r\n  }\r\n\r\n  addGTM() {\r\n    window.dataLayer.push({\r\n      'event': 'virtualPageview',\r\n      'virtualPageURL': '/vp/gosterBilgini/dashboard/',\r\n      'userId': this.props.transactionId\r\n    });\r\n  }\r\n\r\n  // setProduct = (data = {}) => {\r\n  //   return Promise.resolve(data)\r\n  // }\r\n\r\n  // displayPaymentPlan = (val) => {\r\n  //   if (val === '1') {\r\n  //     this.setState({ productCodeSelected: true })\r\n  //     window.scrollTo(0, document.body.scrollHeight)\r\n  //   }\r\n  //   else {\r\n  //     this.setState({ productCodeSelected: false })\r\n  //   }\r\n  // }\r\n\r\n  onSubmit = (values, actions) => {\r\n    const request =\r\n    {\r\n      email: this.props.email,      \r\n    };\r\n    //Bu setSubmitting kalkacak ve zaten submit button olmayacak ve button disabled durumunu state den yönet\r\n    actions.setSubmitting(true)\r\n    this.getTopic(request).then(() => {\r\n      actions.setSubmitting(false)\r\n    })\r\n  }\r\n\r\n  getTopic = (data = {}) => {    \r\n    return this.props\r\n    .getTopic({\r\n      ...data,\r\n      ...pick(this.props, 'transactionId')\r\n    })\r\n      .then((resp) => {\r\n        debugger;\r\n        if (this.props.hasError) {\r\n          this.setState({ isErrorExist: true })\r\n          this.setState({ errorMessageContent: resp.error })\r\n        }\r\n        else {\r\n          this.setState({ isErrorExist: false })\r\n          this.setState({ errorMessageContent: \"\" })\r\n          if(this.props.gameStatus == 1){\r\n            //Oyun Sayfasina Gec\r\n            this.props.history.replace(this.STEP_3_PATH)\r\n          }\r\n          else{\r\n            //Oyuncu bekleniyor\r\n            this.getGameStatus(this.props.topicId)\r\n          }          \r\n        }\r\n      })\r\n  }\r\n\r\n  getGameStatus = (topicId) => {\r\n    return this.props\r\n    .getGameStatus({\r\n      topicId,\r\n      ...pick(this.props, 'transactionId')\r\n    })\r\n      .then((resp) => {\r\n        debugger;\r\n        if (this.props.hasError) {\r\n          this.setState({ isErrorExist: true })\r\n          this.setState({ errorMessageContent: resp.error })\r\n        }\r\n        else {\r\n          this.setState({ isErrorExist: false })\r\n          this.setState({ errorMessageContent: \"\" })\r\n          if(this.props.gameStatus == 1){\r\n            //Oyun Sayfasina Gec\r\n            this.props.history.replace(this.STEP_3_PATH)\r\n          }else{\r\n            //Oyuncu bekleniyor\r\n            this.getGameStatus(this.props.topicId)\r\n          }          \r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const submitButtonStyle = {\r\n      backgroundColor: \"#27c007\",\r\n      height: \"55px\",\r\n      marginTop: \"16px\"\r\n    };\r\n    const submitButtonDisabledStyle = {\r\n      height: \"55px\",\r\n      marginTop: \"16px\"\r\n    };\r\n    return (\r\n      <Formik\r\n        initialValues={{ ...this.state }}\r\n        onSubmit={this.onSubmit}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n          <Fragment>\r\n            <Form>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disabled={isSubmitting}\r\n                style={isSubmitting ? submitButtonDisabledStyle : submitButtonStyle}\r\n              >\r\n                OYUNA BAŞLA\r\n              </Button>\r\n            </Form>\r\n            {this.props.isErrorExist && (\r\n              <ErrMsg component=\"div\" marginclear=\"true\">\r\n                {this.props.errorMessageContent}\r\n              </ErrMsg>\r\n            )}\r\n          </Fragment>\r\n        )} //Formik render\r\n      /> //Formik\r\n    ); //return\r\n  } //render\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...pick(state.global, [\r\n      'transactionId',\r\n      'gameStatus',\r\n      'topicId',\r\n      'hasError',\r\n      'errorMessage'\r\n    ]),\r\n    //productList: state.products.list\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getTopic: globalAction('GetTopic'),\r\n  getGameStatus: globalAction('GetGameStatus'),\r\n  offerProductList: getOfferedProductList\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StepSecond)"],"sourceRoot":""}