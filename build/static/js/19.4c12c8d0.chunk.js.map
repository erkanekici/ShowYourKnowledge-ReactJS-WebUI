{"version":3,"sources":["containers/Step_03.js"],"names":["StepThird","STEP_4_PATH","routePathByName","state","isErrorExist","errorMessageContent","connected","msg","adres","_this","props","topic","messages","onConnected","setState","sendMessage","onMessageReceive","mesaj","concat","Object","C_Users_asus_Desktop_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","onDisconnected","user","clientRef","topicId","JSON","stringify","login","sid","e","console","log","handleChangeTextArea","event","value","target","this","setStep","addGTM","window","dataLayer","push","virtualPageURL","userId","transactionId","_this2","headers","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_TextareaAutosize__WEBPACK_IMPORTED_MODULE_15__","style","width","textAlign","aria-label","rows","placeholder","onChange","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_13__","type","fullWidth","variant","color","onClick","react_stomp__WEBPACK_IMPORTED_MODULE_12___default","url","topics","onMessage","ref","client","onConnect","onDisconnect","onConnectFailure","error","Component","mapDispatchToProps","offerProductList","getOfferedProductList","connect","C_Users_asus_Desktop_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","pick","global"],"mappings":"kRAqBMA,6MACJC,YAAcC,YAAgB,aAE9BC,MAAQ,CACNC,cAAc,EACdC,oBAAqB,GACrBC,WAAW,EACXC,IAAK,GACLC,MAAOC,EAAKC,MAAMC,MAClBC,SAAU,MA0CZC,YAAc,SAACN,EAAKI,GAElBF,EAAKK,SAAS,CAAER,WAAW,IAC3BG,EAAKM,iBAGPC,iBAAmB,SAACC,EAAON,GAEzBF,EAAKK,SAAS,CAAEF,SAAQ,GAAAM,OAAAC,OAAAC,EAAA,EAAAD,CAAMV,EAAKN,MAAMS,UAAjB,CAA0BK,EAAMV,WAG1Dc,eAAiB,SAACd,EAAKI,GAErBF,EAAKK,SAAS,CAAER,WAAW,OAG7BS,YAAc,WAEZ,IACE,IAIIE,EAAQ,CACVV,IAAKE,EAAKN,MAAMI,IAChBe,KAAM,WAKR,OAFAb,EAAKc,UAAUR,YAAY,yBAAyBN,EAAKC,MAAMc,QAASC,KAAKC,UAAUT,GATrE,CAChBU,MAAO,SACPC,IAAK,aASA,EAET,MAAOC,GAEL,OADAC,QAAQC,IAAI,UACL,MAIXC,qBAAuB,SAAAC,GAAS,IACtBC,EAAUD,EAAME,OAAhBD,MACRzB,EAAKK,SAAS,CAAEP,IAAK2B,wFA9ErBE,KAAK1B,MAAM2B,QAAQ,aAGnBD,KAAKE,0CAcLC,OAAOC,UAAUC,KAAK,CACpBR,MAAS,kBACTS,eAAkB,+BAClBC,OAAUP,KAAK1B,MAAMkC,iDA6DhB,IAAAC,EAAAT,KAUHU,EAAU,CACZF,cAAeR,KAAK1B,MAAMkC,cAC1BjC,MAAOyB,KAAK1B,MAAMC,OAEpB,OACEoC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KAEIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,MAAO,CAACC,MAAM,OAAQC,UAAW,UACjCC,aAAW,iBACXC,KAAM,EACNC,YAAY,oCACZC,SAAUtB,KAAKJ,uBAUjBe,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEP,MAAO,CAACC,MAAM,OAAQC,UAAW,WAEhClB,KAAKjC,MAAMS,UAIhBmC,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,UACNC,QAAS7B,KAAKrB,aALhB,yBAYAgC,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CACEmB,IAAI,2BACJC,OAAQ,CAAChC,KAAKjC,MAAMK,OACpB6D,UAAWjC,KAAKpB,iBAChBsD,IAAK,SAACC,GAAa1B,EAAKtB,UAAYgD,GACpCC,UAAW,WAAQ3B,EAAKhC,eACxB4D,aAAc,WAAQ5B,EAAKxB,kBAC3BqD,iBAAkB,SAACC,GAAY7C,QAAQC,IAAI,iCAAoB4C,IAC/D7B,QAASA,YAzJK8B,aAgLlBC,EAAqB,CACzBC,iBAAkBC,KAGLC,sBAjBS,SAAA7E,GACtB,OAAOgB,OAAA8D,EAAA,EAAA9D,CAAA,GACF+D,YAAK/E,EAAMgF,OAAQ,CACpB,gBACA,QACA,UACA,WACA,mBAYJN,EAFaG,CAGbhF","file":"static/js/19.4c12c8d0.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport globalAction from '../store/global/actions'\r\nimport { routePathByName } from '../routes'\r\nimport { pick } from 'lodash-es'\r\nimport SockJsClient from 'react-stomp';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { SetProductCode } from '../components/Products'\r\nimport { getOfferedProductList } from '../store/products/actions'\r\n\r\nclass StepThird extends Component {\r\n  STEP_4_PATH = routePathByName('Step_04')\r\n\r\n  state = {\r\n    isErrorExist: false,\r\n    errorMessageContent: '',\r\n    connected: false,\r\n    msg: '',\r\n    adres: this.props.topic,\r\n    messages: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setStep('startGame')\r\n\r\n    //GoogleTagManager Events\r\n    this.addGTM()\r\n\r\n    //Captcha badge gizleme\r\n    //document.getElementsByClassName(\"grecaptcha-badge\")[0].style.visibility = \"hidden\"\r\n\r\n    // this.props\r\n    //   .offerProductList({\r\n    //     transactionId: this.props.transactionId,\r\n    //     applicationNo: this.props.applicationNo\r\n    //   })\r\n    //   .finally(() => this.setState({ isLoading: false }))\r\n  }\r\n\r\n  addGTM() {\r\n    window.dataLayer.push({\r\n      'event': 'virtualPageview',\r\n      'virtualPageURL': '/vp/gosterBilgini/startGame/',\r\n      'userId': this.props.transactionId\r\n    });\r\n  }\r\n\r\n  // setProduct = (data = {}) => {\r\n  //   return Promise.resolve(data)\r\n  // }\r\n\r\n  // displayPaymentPlan = (val) => {\r\n  //   if (val === '1') {\r\n  //     this.setState({ productCodeSelected: true })\r\n  //     window.scrollTo(0, document.body.scrollHeight)\r\n  //   }\r\n  //   else {\r\n  //     this.setState({ productCodeSelected: false })\r\n  //   }\r\n  // }\r\n\r\n  onConnected = (msg, topic) => {\r\n    debugger;\r\n    this.setState({ connected: true })\r\n    this.sendMessage()\r\n  }\r\n\r\n  onMessageReceive = (mesaj, topic) => {\r\n    debugger;\r\n    this.setState({ messages: [...this.state.messages,mesaj.msg] })\r\n  }\r\n\r\n  onDisconnected = (msg, topic) => {\r\n    debugger;\r\n    this.setState({ connected: false })    \r\n  }\r\n\r\n  sendMessage = () => {\r\n    debugger;\r\n    try {\r\n      var opt_headers = {\r\n        login: 'optLog',\r\n        sid: 'optsid1'\r\n      };\r\n      var mesaj = {\r\n        msg: this.state.msg,\r\n        user: 'optsid1'\r\n      };\r\n      //this.clientRef.sendMessage(\"/app/sendMessage\", JSON.stringify(this.state.msg), opt_headers);\r\n      this.clientRef.sendMessage(\"/app/chat.sendMessage/\"+this.props.topicId, JSON.stringify(mesaj), opt_headers);\r\n      //this.clientRef.sendMessage(\"/app/chat.sendMessage/room1\", JSON.stringify(mesaj), opt_headers);\r\n      return true;\r\n    }\r\n    catch (e) {\r\n      console.log('error')\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleChangeTextArea = event => { debugger;\r\n    const { value } = event.target;\r\n    this.setState({ msg: value });\r\n  };\r\n\r\n  render() {\r\n    const submitButtonStyle = {\r\n      backgroundColor: \"#27c007\",\r\n      height: \"55px\",\r\n      marginTop: \"16px\"\r\n    };\r\n    const submitButtonDisabledStyle = {\r\n      height: \"55px\",\r\n      marginTop: \"16px\"\r\n    };\r\n    var headers = {\r\n      transactionId: this.props.transactionId,\r\n      topic: this.props.topic\r\n    };\r\n    return (\r\n      <Fragment>\r\n        \r\n          <TextareaAutosize\r\n            style={{width:\"100%\", textAlign: \"center\"}}\r\n            aria-label=\"minimum height\"\r\n            rows={5}\r\n            placeholder=\"Mesajınızı giriniz\"\r\n            onChange={this.handleChangeTextArea}\r\n          />\r\n          {/* <TextField\r\n          placeholder=\"MultiLine with rows: 2 and rowsMax: 4\"\r\n          multiline={true}\r\n          rows={2}\r\n          rowsMax={4}\r\n          onChange={this.handleChangeTextArea}\r\n         /> */}\r\n\r\n          <InputLabel\r\n            style={{width:\"100%\", textAlign: \"center\"}}\r\n          >\r\n            {this.state.messages}\r\n          </InputLabel>\r\n        \r\n\r\n        <Button\r\n          type=\"button\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={this.sendMessage}\r\n          //disabled={isSubmitting}\r\n          //style={isSubmitting ? submitButtonDisabledStyle : submitButtonStyle}\r\n        >\r\n          Mesajı Gönder\r\n        </Button>\r\n\r\n        <SockJsClient\r\n          url='http://localhost:8091/ws'\r\n          topics={[this.state.adres]} // '/topic/chat.sendMessage', '/topic/chat.addUser'\r\n          onMessage={this.onMessageReceive}\r\n          ref={(client) => { this.clientRef = client }}\r\n          onConnect={() => { this.onConnected() }}\r\n          onDisconnect={() => { this.onDisconnected() }}\r\n          onConnectFailure={(error) => { console.log(\"Bağlantı Hatası\" + error) }}\r\n          headers={headers}\r\n        //subscribeHeaders={headers}\r\n        //heartbeatIncoming={10000}\r\n        //heartbeatOutgoing={10000}\r\n        />\r\n      </Fragment>\r\n    ); //return\r\n  } //render\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ...pick(state.global, [\r\n      'transactionId',\r\n      'topic',\r\n      'topicId',\r\n      'hasError',\r\n      'errorMessage'\r\n    ]),\r\n    //productList: state.products.list\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  offerProductList: getOfferedProductList\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StepThird)"],"sourceRoot":""}